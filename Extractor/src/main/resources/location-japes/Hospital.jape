Phase: Hospital
Input:  Lookup Token IncorrectLocation
Options: control = appelt

Rule: Hospital
Priority:50
({Token.string == "admitted"}
|
{Token.string == "rushed"})
({!Token.string == "."})*
({Token.string == "to"}
|
{Token.string == "at"})
	({Token.string =~ "[Tt]he"})?
	(
	 ({Token.kind == word, Token.category == NNP, Token.orth == upperInitial}
	 |
	 {Token.kind == word, Token.category == NNP, Token.orth == upperInitial}
	 {Token.kind == word, Token.category == NNP, Token.orth == upperInitial, !Token.string == "National", !IncorrectLocation})
    ):hospital	
	({Token.string =~ "[Bb]ase"}
	|
	{Token.string =~ "[Tt]eaching"}
	|
	{Token.string =~ "[Nn]ational"}
	|
	({Token.string =~ "[Cc]hildren"}
	{Token.kind == punctuation}
	{Token.string == "s"}))?
	({Token.string =~ "[Hh]ospital"})
--> 
{
if(inputAS.get("CrimeLocation").isEmpty()){
   List annList = new ArrayList((AnnotationSet)bindings.get("hospital"));


   //sort the list by offset
   Collections.sort(annList, new OffsetComparator());

   //iterate through the matched annotations
   for(int i = 0; i < annList.size(); i++)
   {
      Annotation anAnn = (Annotation)annList.get(i);
	  
	  FeatureMap features = Factory.newFeatureMap();
	  features.put("location", "Hospital");
	  
	  
	  Node annEnd = anAnn.getEndNode();
		int j;
		
		for(j= i+1; j < annList.size(); j++){
			Annotation anAnnNext = (Annotation)annList.get(j);
			if(anAnnNext.getStartNode().getOffset() == annEnd.getOffset()+1 || anAnnNext.getStartNode().getOffset() == annEnd.getOffset()){
				annEnd = anAnnNext.getEndNode();
			}else{	
				break;
			}
		}
		 
		i = j-1;
		
		outputAS.add(anAnn.getStartNode(), annEnd, "CrimeLocation", features);

   }
  }
}